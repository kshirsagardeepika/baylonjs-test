"use strict";
(self["webpackChunksample1"] = self["webpackChunksample1"] || []).push([["node_modules_babylonjs_core_ShadersWGSL_passCube_fragment_js"],{

/***/ "./node_modules/@babylonjs/core/ShadersWGSL/passCube.fragment.js":
/*!***********************************************************************!*\
  !*** ./node_modules/@babylonjs/core/ShadersWGSL/passCube.fragment.js ***!
  \***********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   passCubePixelShaderWGSL: () => (/* binding */ passCubePixelShaderWGSL)
/* harmony export */ });
/* harmony import */ var _Engines_shaderStore_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../Engines/shaderStore.js */ "./node_modules/@babylonjs/core/Engines/shaderStore.js");
// Do not edit.

const name = "passCubePixelShader";
const shader = `varying var vUV: vec2f;var textureSamplerSampler: sampler;var textureSampler: texture_cube<f32>;
#define CUSTOM_FRAGMENT_DEFINITIONS
@fragment
fn main(input: FragmentInputs)->FragmentOutputs {var uv: vec2f=input.vUV*2.0-1.0;
#ifdef POSITIVEX
fragmentOutputs.color=textureSample(textureSampler,textureSamplerSampler,vec3f(1.001,uv.y,uv.x));
#endif
#ifdef NEGATIVEX
fragmentOutputs.color=textureSample(textureSampler,textureSamplerSampler,vec3f(-1.001,uv.y,uv.x));
#endif
#ifdef POSITIVEY
fragmentOutputs.color=textureSample(textureSampler,textureSamplerSampler,vec3f(uv.y,1.001,uv.x));
#endif
#ifdef NEGATIVEY
fragmentOutputs.color=textureSample(textureSampler,textureSamplerSampler,vec3f(uv.y,-1.001,uv.x));
#endif
#ifdef POSITIVEZ
fragmentOutputs.color=textureSample(textureSampler,textureSamplerSampler,vec3f(uv,1.001));
#endif
#ifdef NEGATIVEZ
fragmentOutputs.color=textureSample(textureSampler,textureSamplerSampler,vec3f(uv,-1.001));
#endif
}`;
// Sideeffect
_Engines_shaderStore_js__WEBPACK_IMPORTED_MODULE_0__.ShaderStore.ShadersStoreWGSL[name] = shader;
/** @internal */
const passCubePixelShaderWGSL = { name, shader };
//# sourceMappingURL=passCube.fragment.js.map

/***/ })

}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibm9kZV9tb2R1bGVzX2JhYnlsb25qc19jb3JlX1NoYWRlcnNXR1NMX3Bhc3NDdWJlX2ZyYWdtZW50X2pzLmJ1bmRsZS5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7OztBQUFBO0FBQ3dEO0FBQ3hEO0FBQ0EsdUNBQXVDLG1DQUFtQztBQUMxRTtBQUNBO0FBQ0EsaURBQWlEO0FBQ2pEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUM7QUFDRDtBQUNBLGdFQUFXO0FBQ1g7QUFDTyxrQ0FBa0M7QUFDekMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9zYW1wbGUxLy4vbm9kZV9tb2R1bGVzL0BiYWJ5bG9uanMvY29yZS9TaGFkZXJzV0dTTC9wYXNzQ3ViZS5mcmFnbWVudC5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBEbyBub3QgZWRpdC5cbmltcG9ydCB7IFNoYWRlclN0b3JlIH0gZnJvbSBcIi4uL0VuZ2luZXMvc2hhZGVyU3RvcmUuanNcIjtcbmNvbnN0IG5hbWUgPSBcInBhc3NDdWJlUGl4ZWxTaGFkZXJcIjtcbmNvbnN0IHNoYWRlciA9IGB2YXJ5aW5nIHZhciB2VVY6IHZlYzJmO3ZhciB0ZXh0dXJlU2FtcGxlclNhbXBsZXI6IHNhbXBsZXI7dmFyIHRleHR1cmVTYW1wbGVyOiB0ZXh0dXJlX2N1YmU8ZjMyPjtcbiNkZWZpbmUgQ1VTVE9NX0ZSQUdNRU5UX0RFRklOSVRJT05TXG5AZnJhZ21lbnRcbmZuIG1haW4oaW5wdXQ6IEZyYWdtZW50SW5wdXRzKS0+RnJhZ21lbnRPdXRwdXRzIHt2YXIgdXY6IHZlYzJmPWlucHV0LnZVVioyLjAtMS4wO1xuI2lmZGVmIFBPU0lUSVZFWFxuZnJhZ21lbnRPdXRwdXRzLmNvbG9yPXRleHR1cmVTYW1wbGUodGV4dHVyZVNhbXBsZXIsdGV4dHVyZVNhbXBsZXJTYW1wbGVyLHZlYzNmKDEuMDAxLHV2LnksdXYueCkpO1xuI2VuZGlmXG4jaWZkZWYgTkVHQVRJVkVYXG5mcmFnbWVudE91dHB1dHMuY29sb3I9dGV4dHVyZVNhbXBsZSh0ZXh0dXJlU2FtcGxlcix0ZXh0dXJlU2FtcGxlclNhbXBsZXIsdmVjM2YoLTEuMDAxLHV2LnksdXYueCkpO1xuI2VuZGlmXG4jaWZkZWYgUE9TSVRJVkVZXG5mcmFnbWVudE91dHB1dHMuY29sb3I9dGV4dHVyZVNhbXBsZSh0ZXh0dXJlU2FtcGxlcix0ZXh0dXJlU2FtcGxlclNhbXBsZXIsdmVjM2YodXYueSwxLjAwMSx1di54KSk7XG4jZW5kaWZcbiNpZmRlZiBORUdBVElWRVlcbmZyYWdtZW50T3V0cHV0cy5jb2xvcj10ZXh0dXJlU2FtcGxlKHRleHR1cmVTYW1wbGVyLHRleHR1cmVTYW1wbGVyU2FtcGxlcix2ZWMzZih1di55LC0xLjAwMSx1di54KSk7XG4jZW5kaWZcbiNpZmRlZiBQT1NJVElWRVpcbmZyYWdtZW50T3V0cHV0cy5jb2xvcj10ZXh0dXJlU2FtcGxlKHRleHR1cmVTYW1wbGVyLHRleHR1cmVTYW1wbGVyU2FtcGxlcix2ZWMzZih1diwxLjAwMSkpO1xuI2VuZGlmXG4jaWZkZWYgTkVHQVRJVkVaXG5mcmFnbWVudE91dHB1dHMuY29sb3I9dGV4dHVyZVNhbXBsZSh0ZXh0dXJlU2FtcGxlcix0ZXh0dXJlU2FtcGxlclNhbXBsZXIsdmVjM2YodXYsLTEuMDAxKSk7XG4jZW5kaWZcbn1gO1xuLy8gU2lkZWVmZmVjdFxuU2hhZGVyU3RvcmUuU2hhZGVyc1N0b3JlV0dTTFtuYW1lXSA9IHNoYWRlcjtcbi8qKiBAaW50ZXJuYWwgKi9cbmV4cG9ydCBjb25zdCBwYXNzQ3ViZVBpeGVsU2hhZGVyV0dTTCA9IHsgbmFtZSwgc2hhZGVyIH07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1wYXNzQ3ViZS5mcmFnbWVudC5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=